@model appAPP.Models.PlayersViewModel
@{
    Layout = null;
}
<style>
   
    div.PlayersTabtab {
        overflow: hidden;
        border-top: 1px solid #ccc;
        border-bottom: 0px solid #ccc;
        border-left: 1px solid #ccc;
        border-right: 1px solid #ccc;
        background-color: white;
        border-top-left-radius:5px;
        border-top-right-radius:5px;
    }

        div.PlayersTabtab button {
            background-color: inherit;
            float: left;
            border-top: 1px solid #ccc;
            border-bottom: 1px solid #ccc;
            border-left: 1px solid #ccc;
            border-right: 1px solid #ccc;
            border-top-left-radius:4px;
            border-top-right-radius:4px;
            outline: none;
            cursor: pointer;
            padding: 5px 8px;
            transition: 0.3s;
            font-size: 12px;
            margin-left: 1px;
            margin-top: 3px;
            color: navy;
            font-family:Arial;
        }

            div.PlayersTabtab button:hover {
                background-color: #ddd;
            }

            div.PlayersTabtab button.active {
                background-color: #ccc;
                color: black;
                font-weight:bold;
                font-family:Arial;
                font-size: 13px;
            }


    div.PlayersTabtabxs {
        overflow: auto;
        background-color: white;
        border-top-left-radius:5px;
        border-top-right-radius:5px;
        white-space: nowrap;
        border-top: 0px solid #ccc;
        border-bottom: 0px solid #ccc;
        border-left: 1px solid #ccc;
        border-right: 1px solid #ccc;
    }

        div.PlayersTabtabxs button {
            background-color: inherit;
            border-top: 1px solid #ccc;
            border-bottom: 1px solid #ccc;
            border-left: 1px solid #ccc;
            border-right: 1px solid #ccc;
            border-top-left-radius:4px;
            border-top-right-radius:4px;
            outline: none;
            cursor: pointer;
            padding: 5px 8px;
            transition: 0.3s;
            font-size: 11px;
            margin-left: 1px;
            margin-top: 1px;
            color: navy;
            font-weight:normal;
            font-family:Arial;
        }

            div.PlayersTabtabxs button:hover {
                background-color: #ddd;
            }

            div.PlayersTabtabxs button.active {
                background-color: #ccc;
                color: black;
                font-weight:bold;
                font-family:Arial;
                font-size: 12px;
            }



    .PlayersTabtabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
        border-bottom-left-radius:5px;
        border-bottom-right-radius:5px;
    }

    
.PlayersTabclosebtn {
    font-size: 17px;
    text-decoration: none;
    color: black;
    font-weight: bold;
    padding-right: 7px;
    padding-top: 3px;
}


.PlayersTabclosebtnsx {
    font-size: 17px;
    text-decoration: none;
    color: black;
    font-weight: bold;
    padding-left: 4px;
    padding-top: 0px;
    margin-top: 0px;
    margin-bottom: 0px;
    padding-bottom: 0px;
}


</style>

<div  id="PlayersShowtabtab" style="padding-top: 3px;height:380px;">

    <div class="PlayersTabtab hidden-xs">

        <button class="PlayersTabtablinks" onclick="PlayersTabAddChild('PlayersTabStart', 'Child1')" id="PlayersTabStartChild1">Add Child</button>

        <a href="javascript:void(0)" title="Close" class="PlayersTabclosebtn" style="color: black;font-weight:bold;float:right;text-decoration: none;" onclick="PlayersHideChildALL();">&times;</a>
    </div>
 
    <div style="border:0px solid red;overflow-x: auto;display:inline-block;" class="visible-xs">
            <table border="0" style="width:100%;">
                <tr>
                    <td align="left">
                        <div class="PlayersTabtabxs visible-xs">

                            <button class="PlayersTabtablinks" onclick="PlayersTabAddChild('PlayersTabStart', 'Child1')" id="PlayersTabStartChild1xs">Add Child</button>

                        </div>
                    </td>
                    <td align="right">
                        <a href="javascript:void(0)" title="Close" class="PlayersTabclosebtnsx" style="color: black;font-weight:bold;text-decoration: none;" onclick="PlayersHideChildALL();">&times;</a>
                    </td>
                </tr>
            </table>
    </div>


    <div id="PlayersTab~childprog1~" class="PlayersTabtabcontent">
        <div id="PlayersTab~childprog1~Div">

        </div>
    </div>
    <div id="PlayersTab~childprog2~" class="PlayersTabtabcontent">
        <div id="PlayersTab~childprog2~Div">
        
        </div>
    </div>
    <div id="PlayersTab~childprog3~" class="PlayersTabtabcontent">
        <div id="PlayersTab~childprog3~Div">

        </div>
    </div>
    <div id="PlayersTab~childprog4~" class="PlayersTabtabcontent">
        <div id="PlayersTab~childprog4~Div">
        
        </div>
    </div>
    <div id="PlayersTab~childprog5~" class="PlayersTabtabcontent">
        <div id="PlayersTab~childprog5~Div">
        
        </div>
    </div>
    <div id="PlayersTab~childprog6~" class="PlayersTabtabcontent">
        <div id="PlayersTab~childprog6~Div">

        </div>
    </div>
    <div id="PlayersTab~childprog7~" class="PlayersTabtabcontent">
        <div id="PlayersTab~childprog7~Div">
        
        </div>
    </div>
    <div id="PlayersTab~childprog8~" class="PlayersTabtabcontent">
        <div id="PlayersTab~childprog8~Div">
        
        </div>
    </div>

</div>

<div id="PlayersTabshowSpinPopup" data-bind="visible: isSpinning" style="display:none; position: absolute; top: 40px; left: 220px;">
    <i class="fa fa-spinner fa-spin"></i>
    <span class="updateProgressMessage">Processing (isleniyor) ...</span>
</div>


<script language="javascript" type="text/javascript">

   var PlayersurlTabChildDel = '/Home/ReloadDel';  

   function PlayersTabDelChild(Prog, ChildNumber, ChildTable) {
    var txt;
    var r = confirm("Continue to Delete Left Tab?");
    if (r == true) {
      PlayersTabDelChildStart(Prog, ChildNumber, ChildTable);
    } else {
    } 

   }
    function PlayersTabDelChildStart(Prog, ChildNumber, ChildTable) {
        $("#PlayersFormtopdiv [name=CurrentProgName]").val(Prog);
        $("#PlayersFormtopdiv [name=CurrentChildNo]").val(ChildNumber);
        var ParentProgName = "Players";
        $("#PlayersFormtopdiv [name=ParenterProgName]").val(ParentProgName);
        $("#PlayersFormtopdiv [name=ChildtableName]").val(ChildTable);

        PlayersChildDel = $("#PlayersForm").serialize();   

        setTimeout(PlayersTabChildServerDEL, 30);
    }


    function PlayersTabChildServerDEL() {


        var putTitle = "";
        putTitle = "Deleting Child";

        $("#PlayersModalk").css("display", "block");
        $(".modal-contentk").css("width", "280px");
        $("#PlayersmodalkTitle").text(putTitle);

        var Expandid = "ModalPlayersOverlayK";

        var ChildNumber = "1";
        var Existin = "Exist";
        var Newin = "New";

        var dialogHeight = "100";
        var Expandheightpx = dialogHeight + "px";
        document.getElementById(Expandid).style.height = Expandheightpx;

        $("#ModalPlayersOverlayK").empty();
        var strTextDel = "<div style='font-size:12px;color:black;padding-bottom: 9px;padding-top:9px;'>Choose to Delete Code and/or Table?</div>";
        var strSubmit = '<input style="font-size:10px;display:inline-block;font-weight:bold;margin-right:9px;" class="btn-primary btn-sm" type="button" value="Delete Code ONLY" onclick="PlayersTabChildServerDELStart(' + '\'' + ChildNumber + '\'' + ',' + '\'' + Newin + '\'' + ');PlayersCloseK();" />';
        var strCancel = '<input style="font-size:10px;display:inline-block;font-weight:bold;" class="btn-success btn-sm" type="button" value="Delete Code & Table" onclick="PlayersTabChildServerDELStart(' + '\'' + ChildNumber + '\'' + ',' + '\'' + Existin + '\'' + ');PlayersCloseK();" />';

        $("#ModalPlayersOverlayK").html(strTextDel + strSubmit + strCancel);

    }

   function PlayersTabChildServerDELStart(ChildNumber, typein) {

        var PlayersChildDelURL77 = '@Url.Action("GenerateCodeDELChildPOnly", "ENTITYTABLE")';

        if (typein == "Exist") {
          PlayersChildDelURL77 = '@Url.Action("GenerateCodeDELChild", "ENTITYTABLE")';
        }

        $.post(PlayersChildDelURL77, PlayersChildDel, function (data, textStatus) {
            PlayersTabChildGenCodeRecordDEL(data);
        }, "json");

    }
    function PlayersTabChildGenCodeRecordDEL(jsonScript) {
        var returnMessage = "";

        for (i = 0; i < jsonScript.ReturnMessage.length; i++) {
            returnMessage = returnMessage + jsonScript.ReturnMessage[i] + "\n";
        }

        if (jsonScript.ReturnStatus == true) {
            alert("Generated Code successfully Deleted.");
            PlayersTabChildDoneitDEL();
        }
        else {
            alert("" + returnMessage);
        }
    }
    function PlayersTabChildDoneitDEL() {
        window.location.href = PlayersurlTabChildDel;   //  url ye bak
    }


  function PlayersTabAddChild(PKID, ChildNumber) {
   
      var putTitle = "";
      putTitle = "Adding New Child";

      $("#PlayersModalk").css("display", "block");
      $(".modal-contentk").css("width", "270px");
      $("#PlayersmodalkTitle").text(putTitle);

      var Expandid = "ModalPlayersOverlayK";

      var Existin = "Exist";
      var Newin = "New";

      var dialogHeight = "100";
      var Expandheightpx = dialogHeight + "px";
      document.getElementById(Expandid).style.height = Expandheightpx;

      $("#ModalPlayersOverlayK").empty();
      var strTextDel = "<div style='font-size:12px;color:black;padding-bottom: 9px;padding-top:9px;'>Choose to Create or use Existing Table?</div>";
      var strSubmit = '<input style="font-size:11px;display:inline-block;font-weight:bold;margin-right:9px;" class="btn-primary btn-sm" type="button" value="Use Existing Table" onclick="PlayersTabAddChildStart(' + '\'' + ChildNumber + '\'' + ',' + '\'' + Existin + '\'' + ');" />';
      var strCancel = '<input style="font-size:11px;display:inline-block;font-weight:bold;" class="btn-success btn-sm" type="button" value="Create New Table" onclick="PlayersTabAddChildStart(' + '\'' + ChildNumber + '\'' + ',' + '\'' + Newin + '\'' + ');" />';

      $("#ModalPlayersOverlayK").html(strTextDel + strSubmit + strCancel);

  }
  

  function PlayersTabAddChildStart(ChildNumber, typein) {

        var PrimPKID = $("#PlayersFormtopdiv [name=Name_ID]").val();

        $("#ChildCounterDiv [name=CHILDNUMBER]").val(ChildNumber);

        var ParentProgName = "Players";
        $("#ParentProgNameDiv [name=PARENTPROG]").val(ParentProgName);

        var ParentProgPKID = "Player_ID";
        $("#ParentProgPKIDDiv [name=PARENTPKID]").val(ParentProgPKID);

        var putTitle = "";
        putTitle = "Add Child";
      
        var strAction = "DisplayChildAdd";
        var strController = "ChildAdd";
    
       
        if (typein == "Exist") {
            strAction = "DisplayChildAddk";
            strController = "ChildAddk";
        }


        var pagesrc = '/Names17/Names1Detail7';  
        pagesrc = pagesrc.replace("Names1Detail7", strAction);
        pagesrc = pagesrc.replace("Names17", strController);
   
        var dialogWidth = 0;
        var dialogHeight = 0;
        dialogWidth = document.getElementById("PlayersForm").offsetWidth;
        dialogHeight = document.getElementById("PlayersForm").offsetHeight;

        var deviceHeight = (typeof window.outerHeight != 'undefined') ? Math.max(window.outerHeight, $(window).height()) : $(window).height();
        var HeightChk = "true";
        if (isBreakpointGet('xs')) {  
            if (Number(deviceHeight) < 400) {
                alert(" uygun degil.");
                LayoutHideProgressBar(); 
                HeightChk = "false";
            }
        }
        else
        {
            if (Number(deviceHeight) < 640) {
                alert("uygun degil gorunumu degistir.");
                LayoutHideProgressBar();  
                HeightChk = "false";
            }
        }
        //--***************************
        if (isBreakpointGet('xs')) { 
            dialogHeight = Number(deviceHeight) - 328;
        }
        else {
            dialogHeight = Number(deviceHeight) - 350; 
        }

        var deviceWidth = (typeof window.outerWidth != 'undefined') ? Math.max(window.outerWidth, $(window).width()) : $(window).width();

        if (isBreakpointGet('xs')) {
            dialogWidth = Number(deviceWidth) - 40;     
        }
        else {
            dialogWidth = Number(deviceWidth) - 240;  
        }


        if (HeightChk == "true")  
        {

            $("#PlayersModalk").css("display", "block");
            $("#PlayersmodalkTitle").text(putTitle);
            $(".modal-contentk").css("width", "85%");      

            var Expandid = "ModalPlayersOverlayK";          

            var Expandheightpx = dialogHeight + "px";
            document.getElementById(Expandid).style.height = Expandheightpx;

            $("#ModalPlayersOverlayK").empty();

            if ($("#ModalPlayersOverlayK").length == 0) { 
                alert("Div yokt. ");
            }
            else {

                $('#ModalPlayersOverlayK').load(pagesrc, '', function (response, status, xhr) {
   
                    if (status == 'success') {
                    }
                    else  
                    {
                     
                        alert("Edit load problem is: " + xhr.statusText);
                        alert("Edit load problem text is: " + xhr.responseText);
                    }

                });

            }

        } 

    }
  

    function PlayersTabOpenTab(evt, tabName, ProgName) {

        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("PlayersTabtabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("PlayersTabtablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";

        var strAction = "Display" + ProgName;
        var strController = ProgName;

        //Controller/Action
        var PlayersTabpagesrc = '/PlayersTabk/PlayersTabActionk'; 
        PlayersTabpagesrc = PlayersTabpagesrc.replace("PlayersTabActionk", strAction);
        PlayersTabpagesrc = PlayersTabpagesrc.replace("PlayersTabk", strController);


        $("#PlayersTab" + ProgName + "Div").empty();


        $("#PlayersTab" + ProgName + "Div").load(PlayersTabpagesrc, '', function (response, status, xhr) {
            if (status == 'success') {
                var RowID = $("#PlayersFormtopdiv [name=CurrentRowNumber]").val();
                setTimeout(ScrollToTopPlayers, 40, RowID);    
            }
            else 
            {
                alert("Tab load problem is: " + xhr.statusText);
            }

        });


    }

    function ScrollToTopPlayers(indx) {
        var row_ID2 = Number(indx) - 1;

        var imasterrowid2 = "Playersmaster" + row_ID2;
        var selectedPosy = 0;
       
        if (document.getElementById(imasterrowid2)) {
            selectedPosy = document.getElementById(imasterrowid2).offsetTop;
       
            $("#idDivPlayersTBody").scrollTop(selectedPosy);
        }

    }



    try {

     if (isBreakpointGet('xs')) { 

              var parentElement = document.getElementsByClassName("PlayersTabtabxs")[0];
              var c = parentElement.children;
              c[0].click();  

    
     }
     else {

               var parentElement = document.getElementsByClassName("PlayersTabtab")[0];
               var c = parentElement.children;
               c[0].click(); 

     }

    }
    catch (err) {
      
    }

    setTimeout(LayoutHideProgressBar, 1000);  
 
</script>
